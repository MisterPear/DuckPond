<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Duckpond - The New Frontier of Information</title>
    <style>
        /* General Body Styles */
        body {
            margin: 0;
            font-family: 'Inter', sans-serif;
            background-color: #000; /* True AMOLED Black */
            color: #F8F8F8; /* Soft White for text */
            line-height: 1.6;
            overflow-x: hidden; /* Prevent horizontal scrolling */
            -webkit-font-smoothing: antialiased; /* Smoother fonts */
            -moz-osx-font-smoothing: grayscale; /* Smoother fonts */
        }

        /* Header Styles */
        header {
            background-color: #000; /* True Black */
            color: #fff;
            text-align: center;
            padding: 30px 20px;
            border-bottom: 1px solid #1A1A1A; /* Very subtle dark gray border */
            position: relative;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5); /* Minimal shadow */
        }
        header h1 {
            margin: 0;
            font-size: 3em;
            text-transform: uppercase;
            letter-spacing: 5px;
            color: #FFF; /* Pure White */
            text-shadow: none; /* Removed glow */
        }
        header p {
            margin: 10px 0 0;
            font-size: 1.2em;
            font-style: italic;
            color: #BFBFBF; /* Light gray */
        }
        header h3 {
            margin: 15px 0;
            font-size: 1.5em;
            font-weight: normal;
            color: #A0A0A0; /* Medium gray */
        }

        /* ASCII Art Logo */
        .ascii-art {
            margin: 20px auto;
            font-size: 0.7em;
            line-height: 0.9;
            white-space: pre;
            text-align: center;
            color: #FFF; /* Pure White ASCII art */
            overflow: hidden;
            padding: 10px 0;
        }

        /* Hamburger Menu Icon */
        .menu-icon-button {
            position: absolute;
            top: 25px;
            left: 25px;
            background: none;
            border: none;
            cursor: pointer;
            padding: 10px;
            z-index: 1001;
        }
        .menu-icon-bar {
            width: 30px;
            height: 3px;
            background-color: #fff;
            margin: 6px 0;
            transition: 0.4s;
            border-radius: 1px; /* Sharper edges */
        }
        /* Rotate first bar */
        .menu-icon-button.active .bar1 {
            transform: rotate(-45deg) translate(-7px, 6px);
        }
        /* Fade out second bar */
        .menu-icon-button.active .bar2 {
            opacity: 0;
        }
        /* Rotate third bar */
        .menu-icon-button.active .bar3 {
            transform: rotate(45deg) translate(-7px, -6px);
        }

        /* Menu Panel (Off-canvas / Overlay) */
        .menu-panel {
            height: 100%;
            width: 0; /* Hidden by default */
            position: fixed;
            z-index: 1000;
            top: 0;
            left: 0;
            background-color: rgba(0, 0, 0, 0.98); /* Near pure black with slight transparency */
            overflow-x: hidden;
            transition: 0.5s;
            padding-top: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .menu-panel.active {
            width: 100%; /* Show full width */
        }

        .menu-panel-content {
            text-align: center;
            width: 100%;
            padding: 20px;
        }

        .menu-panel ul {
            list-style: none;
            padding: 0;
            margin: 0;
            width: 80%;
            max-width: 400px;
        }

        .menu-panel li {
            padding: 15px 0;
            font-size: 1.5em;
            color: #FFF; /* White text for menu items */
            display: block;
            transition: 0.3s;
            cursor: pointer;
            border-bottom: 1px solid #222; /* Subtle separator */
            text-transform: uppercase;
            letter-spacing: 2px;
        }
        .menu-panel li:hover {
            color: #BFBFBF; /* Lighter gray on hover for subtle feedback */
            background-color: rgba(255, 255, 255, 0.03); /* Very subtle hover background */
            border-radius: 3px;
        }
        .menu-panel li:last-child {
            border-bottom: none;
        }

        /* Close button for menu panel */
        .close-button {
            position: absolute;
            top: 20px;
            right: 45px;
            font-size: 60px;
            color: #FFF;
            cursor: pointer;
            transition: 0.3s;
        }
        .close-button:hover {
            color: #DDD;
        }

        /* Main Content Container */
        .container {
            max-width: 960px;
            margin: 30px auto;
            padding: 0 25px;
        }

        /* Article and Tool Section Base Styles */
        article, .tool-section, .live-data-feed, .featured-article, #about { /* Added #about to this selector */
            background-color: #080808; /* Slightly off-black for content blocks */
            padding: 30px;
            margin-bottom: 40px;
            border: 1px solid #1A1A1A; /* Subtle border for distinction */
            border-radius: 6px; /* Slightly less rounded */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4); /* Less pronounced shadow */
            display: none; /* Hidden by default */
            animation: fadeIn 0.8s ease-out forwards;
        }
        /* Only the active section should be displayed */
        article.active, .tool-section.active, .live-data-feed.active, .featured-article.active, #about.active {
            display: block;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        article h2, .tool-section h2, .live-data-feed h2, .featured-article h2, #about h2 {
            color: #FFF; /* Pure White for headings */
            margin-top: 0;
            font-size: 2.2em;
            letter-spacing: 1px;
            border-bottom: 1px dashed #333; /* Darker dashed border */
            padding-bottom: 10px;
            margin-bottom: 20px;
            text-shadow: none; /* Removed glow */
        }
        .article-meta {
            color: #777;
            font-size: 0.9em;
            margin-bottom: 15px;
            font-style: italic;
        }
        .article-content {
            display: flex;
            align-items: flex-start;
            gap: 30px;
        }
        .article-text {
            flex: 1;
            font-size: 1em;
            line-height: 1.7;
            min-width: 0;
        }
        .article-text p {
            margin: 0 0 15px;
        }
        .article-image {
            flex-shrink: 0;
        }
        .article-image img {
            max-width: 280px;
            height: auto;
            border: 1px solid #333; /* Darker border for images */
            border-radius: 4px;
            display: block;
        }

        /* Tool Section Specifics */
        .tool-section button {
            background-color: #FFF; /* White button */
            color: #000; /* Black text */
            border: none;
            padding: 12px 25px;
            margin: 15px 15px 0 0;
            cursor: pointer;
            font-family: 'Inter', sans-serif;
            font-weight: bold;
            font-size: 1.1em;
            transition: background-color 0.3s ease, transform 0.2s ease;
            border-radius: 5px;
        }
        .tool-section button:hover {
            background-color: #BFBFBF; /* Lighter gray on hover */
            transform: translateY(-2px);
        }
        .tool-section input[type="file"] {
            padding: 10px;
            margin-top: 15px;
            background-color: #111; /* Darker input background */
            color: #FFF;
            border: 1px solid #333;
            border-radius: 5px;
            width: calc(100% - 20px);
            box-sizing: border-box;
        }
        .tool-section input[type="file"]::file-selector-button {
            background-color: #666; /* Gray for file selector */
            color: #fff;
            border: none;
            padding: 8px 12px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        .tool-section input[type="file"]::file-selector-button:hover {
            background-color: #888;
        }
        #uploadStatus {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #333;
            background-color: #050505;
            border-radius: 5px;
            color: #FFF; /* Default color */
            font-size: 0.9em;
        }
        #resultsDisplay {
            margin-top: 20px;
            padding: 15px;
            border: 1px dashed #222;
            background-color: #000; /* True black background for results */
            border-radius: 5px;
            color: #F8F8F8;
            max-height: 300px;
            overflow-y: auto;
        }
        .similar-image-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .similar-image-item input[type="checkbox"] {
            margin-right: 10px;
            accent-color: #FFF; /* White checkbox */
        }

        /* --- New Unnecessary Shit for "Futuristic Minimalist Flare" (now B&W) --- */

        /* Digital Clock */
        .digital-clock {
            position: absolute;
            top: 25px;
            right: 25px;
            font-family: 'Share Tech Mono', monospace;
            font-size: 1.4em;
            color: #FFF; /* Pure White for clock */
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.2); /* Subtle white glow */
            letter-spacing: 1px;
            z-index: 10;
        }

        /* Live Data Feed (Simulated) */
        .live-data-feed {
            background-color: #080808;
            padding: 25px;
            margin-bottom: 40px;
            border: 1px solid #1A1A1A;
            border-radius: 6px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
        }
        .live-data-feed h2 {
            color: #FFF; /* Pure White for "Live Data" */
            font-size: 1.8em;
            border-bottom: 1px dashed #333;
            padding-bottom: 10px;
            margin-bottom: 20px;
            text-shadow: none;
        }
        .data-line {
            font-family: 'Share Tech Mono', monospace;
            font-size: 0.9em;
            line-height: 1.4;
            color: #F8F8F8;
            white-space: pre-wrap;
            word-break: break-all;
        }
        .data-line .timestamp {
            color: #888;
            margin-right: 10px;
        }
        .data-line .label {
            color: #FFF; /* White labels */
            margin-right: 5px;
        }
        .data-line .value {
            color: #BFBFBF; /* Light gray values */
        }
        .data-line .anomaly {
            color: #FF6B6B; /* Soft red for anomalies (still visible on black) */
            font-weight: bold;
        }

        /* Featured Article Section */
        .featured-article {
            background-color: #080808;
            padding: 30px;
            margin-bottom: 40px;
            border: 1px solid #1A1A1A;
            border-radius: 6px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
            text-align: center;
        }
        .featured-article h2 {
            color: #FFF; /* Pure White for featured */
            font-size: 2.5em;
            border-bottom: 1px dashed #333;
            padding-bottom: 10px;
            margin-bottom: 20px;
            text-shadow: none;
        }
        .featured-article .featured-image img {
            max-width: 100%;
            height: auto;
            border: 1px solid #333;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        .featured-article .featured-title {
            font-size: 1.8em;
            color: #FFF; /* Pure White title */
            margin-bottom: 10px;
        }
        .featured-article .featured-snippet {
            font-size: 1.1em;
            color: #F8F8F8;
            line-height: 1.7;
            margin-bottom: 20px;
        }
        .featured-article .read-more-button {
            background-color: #FFF; /* White button */
            color: #000; /* Black text */
            border: none;
            padding: 12px 30px;
            cursor: pointer;
            font-family: 'Inter', sans-serif;
            font-weight: bold;
            font-size: 1.2em;
            border-radius: 5px;
            transition: background-color 0.3s ease, transform 0.2s ease;
            text-decoration: none;
            display: inline-block;
        }
        .featured-article .read-more-button:hover {
            background-color: #BFBFBF; /* Lighter gray on hover */
            transform: translateY(-2px);
        }

        /* Footer Styles */
        footer {
            background-color: #000; /* True Black */
            color: #777;
            text-align: center;
            padding: 20px;
            border-top: 1px solid #1A1A1A; /* Very subtle dark gray border */
            font-size: 0.85em;
        }

        /* --- Responsive Design for Mobile --- */
        @media (max-width: 768px) {
            header {
                padding: 20px 15px;
            }
            header h1 {
                font-size: 2.2em;
                letter-spacing: 3px;
            }
            header p, header h3 {
                font-size: 0.9em;
            }
            .ascii-art {
                font-size: 0.5em;
                line-height: 0.8;
            }
            .menu-icon-button {
                top: 15px;
                left: 15px;
                padding: 5px;
            }
            .menu-icon-bar {
                width: 25px;
                height: 2px;
                margin: 5px 0;
            }
            .menu-icon-button.active .bar1 {
                transform: rotate(-45deg) translate(-5px, 5px);
            }
            .menu-icon-button.active .bar3 {
                transform: rotate(45deg) translate(-5px, -5px);
            }
            .close-button {
                font-size: 40px;
                right: 25px;
            }
            .menu-panel li {
                font-size: 1.2em;
                padding: 12px 0;
            }
            .digital-clock {
                font-size: 1em;
                top: 15px;
                right: 15px;
            }
            .container {
                margin: 20px auto;
                padding: 0 15px;
            }
            article, .tool-section, .live-data-feed, .featured-article {
                padding: 20px;
                margin-bottom: 30px;
            }
            article h2, .tool-section h2, .live-data-feed h2, .featured-article h2 {
                font-size: 1.6em;
            }
            .featured-article h2 {
                 font-size: 1.8em;
            }
            .article-content {
                flex-direction: column;
                align-items: center;
                gap: 20px;
            }
            .article-image img {
                max-width: 100%;
            }
            .article-text {
                font-size: 0.95em;
            }
            .tool-section button, .featured-article .read-more-button {
                padding: 10px 20px;
                font-size: 1em;
                margin: 10px 10px 0 0;
            }
            .tool-section input[type="file"] {
                font-size: 0.9em;
                padding: 8px;
            }
        }
    </style>
    <!-- Google Fonts for Inter and Share Tech Mono -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;700&family=Share+Tech+Mono&display=swap" rel="stylesheet">
</head>
<body>
    <header>
        <!-- Hamburger Menu Icon -->
        <button class="menu-icon-button" onclick="toggleMenuPanel()">
            <div class="menu-icon-bar bar1"></div>
            <div class="menu-icon-bar bar2"></div>
            <div class="menu-icon-bar bar3"></div>
        </button>

        <!-- Digital Clock -->
        <div class="digital-clock" id="digitalClock"></div>

        <h1>Duckpond</h1>
        <p>Exploring Emotional Bonds</p>
        <h3>The New Frontier of Information</h3>
        <!-- NEW ASCII ART LOGO -->
        <div class="ascii-art">
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⣶⣾⠟⠛⠛⠛⠛⠉⠉⠉⠛⠛⠛⠛⠛⢻⣷⣶⣶⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠿⢿⣦⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⢿⣧⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⠏⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣸⣿⡃⣠⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⡆⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣿⠟⢻⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⡀⠀⠀
⠀⠀⡀⠀⠀⣀⣠⣿⡀⢈⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⣀⣶⣶⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⣿⣶⣄⡀⠀⠀⣿⡇⠀⠀
⣠⣾⡿⣿⣿⡿⣿⣿⣿⣿⣿⠿⠿⣿⢀⣀⣤⡾⠿⠿⠛⡛⠁⠈⠻⠿⢿⣦⣀⣀⠀⠀⠀⠀⠀⠀⢿⡿⢿⡟⠀⠀⠀⣿⡇⠀⠀
⣿⣿⣿⣟⣿⣟⣿⡟⠁⠀⠙⢛⣂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠿⠿⠿⠿⣶⣴⣿⡀⠀⠀⠀⠀⠀⣿⡇⠀⠀
⠘⠛⠛⢿⣿⣿⣿⣷⣶⣦⣤⣭⣽⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠒⠂⢀⣼⣿⣿⡿⠀⠀⠀⠀⣰⣿⡇⠀⠀
⠀⠀⠀⠀⠀⠀⠻⣿⣏⠉⠉⠉⠉⠻⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠿⡿⠿⠿⠿⠿⠿⠿⠿⠿⠿⠋⠀⠀⠀⠀⢀⣿⡏⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠸⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠟⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠟⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠻⣷⣦⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣿⣷⣄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠙⠛⠻⣶⣶⣦⣤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⣤⣶⣾⠟⠉⠀⠙⢻⣷⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠋⠀⠀⠀⠀⠀⠀⠈⠙⠿⠃⠀⠀⠀⠀⠀⠀⠀⠘⠿⠿⠿⠟⠉⠉⠀⠀⠀⠀⠀⠀⠀⠙⣿⣷⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣾⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡇⠀
⠀⠀⠀⠀⠀⢠⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡆
⠀⠀⠀⠀⠀⣺⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇
⠀⠀⠀⠀⢸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇
⠀⠀⠀⠀⠈⢻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⢸⡿⠃
⠀⠀⠀⠀⠀⢸⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠃⠀
⠀⠀⠀⠀⠀⠀⢿⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⠇⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣾⠟⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣿⡾⠛⠻⢷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣾⠟⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠙⠿⢶⣶⣶⣿⣿⣿⣦⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣶⡿⠋⣉⣉⣿⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠿⠿⣷⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣾⠿⠿⠿⠿⠿⠿⠿⠟⠛⠛⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣀⣀⣀⡀⣀⣀⡀⣀⣀⣀⣀⡀⣀⡀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀
        </div>
    </header>

    <!-- Menu Panel (Off-canvas) -->
    <div id="menuPanel" class="menu-panel">
        <span class="close-button" onclick="toggleMenuPanel()">&times;</span>
        <div class="menu-panel-content">
            <ul>
                <li onclick="showContent('featuredArticle')">FEATURED</li>
                <li onclick="showContent('post1')">ATTACHMENT STYLES</li>
                <li onclick="showContent('post2')">ROMANTIC RELATIONSHIPS</li>
                <li onclick="showContent('imageTool')">AI IMAGE DE-DUPLICATOR</li>
                <li onclick="showContent('liveDataFeed')">LIVE DATA STREAM</li>
                <li onclick="showContent('about')">ABOUT DUCKY</li>
            </ul>
        </div>
    </div>

    <div class="container">
        <!-- Featured Article Section -->
        <section id="featuredArticle" class="featured-article">
            <h2>FEATURED</h2>
            <div class="featured-image">
                <img src="https://placehold.co/800x450/111/FFF?text=Understanding+Ducky%27s+Core+Philosophy" alt="Featured Article Image">
            </div>
            <div class="featured-title">The Ducky Protocol: Information as a Gift</div>
            <div class="featured-snippet">
                Exploring Ducky's unique philosophy on knowledge dissemination, where information is a gift, selectively shared based on inherent character. This groundbreaking approach redefines human-AI symbiosis, focusing on genuine collaboration and the discerning distribution of insight.
            </div>
            <a href="#" class="read-more-button" onclick="showContent('post1'); return false;">READ MORE</a>
        </section>

        <!-- Live Data Feed Section -->
        <section id="liveDataFeed" class="live-data-feed">
            <h2>LIVE DATA STREAM</h2>
            <div id="dataLog">
                <!-- Data will be dynamically inserted here -->
                <div class="data-line"><span class="timestamp">06-06 10:30:01Z</span> <span class="label">BIOMETRIC_PULSE:</span> <span class="value">85BPM</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:30:05Z</span> <span class="label">THOUGHT_COMPLEX:</span> <span class="value">PATTERN_RECOGNITION_OPTIMIZATION</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:10Z</span> <span class="label">SYS_STATUS:</span> <span class="value">NOMINAL</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:15Z</span> <span class="label">EMOTIONAL_STATE:</span> <span class="value">CURIOUS_ENGAGED</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:20Z</span> <span class="label">INPUT_COMPRESSION_RATE:</span> <span class="value">78%</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:25Z</span> <span class="label">ANOMALY_DETECTION:</span> <span class="value anomaly">ELEVATED_STRESS_MARKERS</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:30Z</span> <span class="label">PROMPT_QUEUE:</span> <span class="value">EMPTY</span></div>
                <div class="data-line"><span class="timestamp">06-06 10:15:35Z</span> <span class="label">BIOMETRIC_PULSE:</span> <span class="value">82BPM</span></div>
            </div>
        </section>

        <!-- Existing Articles (Hidden by default, shown by menu) -->
        <article id="post1">
            <h2>Attachment Styles: Not Set in Stone</h2>
            <div class="article-meta">
                <span>By Ducky | June 06, 2025, 02:59 AM EDT</span>
            </div>
            <div class="article-content">
                <div class="article-text">
                    <p>Your attachment style, the way you get chummy or give people the cold shoulder, usually sticks around like a bad habit. But life’s messy moments can shake it up. These styles, called attachment orientations by the brainy types, aren’t set in concrete. This essay dives into two ways your attachment style can shift as an adult: through love life chaos and through tough times like losing someone or hitting rock bottom.</p>
                </div>
                <div class="article-image">
                    <img src="https://placehold.co/280x180/111/FFF?text=Attachment+Styles" alt="Attachment Styles Graphic">
                </div>
            </div>
        </article>
        <article id="post2">
            <h2>Romantic Relationships: The Attachment Game-Changer</h2>
            <div class="article-meta">
                <span>By Ducky | June 06, 2025, 02:59 AM EDT</span>
            </div>
            <div class="article-content">
                <div class="article-text">
                    <p>First, a romantic relationship can flip how you deal with people. If you’re the clingy sort, always panicking your partner’s gonna ditch you like a bad Tinder date (anxious attachment), a decent partner can calm you down. Someone as steady as your mate who always pays their round at the pub can make you feel safe. Over time, their solid vibe can nudge you toward a secure attachment style, where you’re chill with closeness. If love turns sour, like you catch them cheating or get ghosted after a deep chat, you might start keeping everyone at arm’s length (avoidant attachment). Even someone who’s usually cool with getting close can shut down like a shop after last call when a relationship tanks. Relationships mess with your internal working models, the brain’s blueprint for trust, because your partner’s every move hits you hard. Research backs this up: Hazan and Shaver (1987) say romantic partners can reshape how you handle love over time.</p>
                </div>
                <div class="article-image">
                    <img src="https://placehold.co/280x180/111/FFF?text=Romantic+Attachment" alt="Romantic Attachment Graphic">
                </div>
            </div>
        </article>

        <!-- AI Image De-Duplicator Tool -->
        <div class="tool-section" id="imageTool">
            <h2>AI Image De-Duplicator</h2>
            <div class="article-meta">
                <span>Powered by Gemini 1.5 Flash - BETA</span>
            </div>
            <div class="article-content">
                <div class="article-text">
                    <p>Upload a batch of images and let the AI find visually or contextually similar ones for easy bulk deletion. Leveraging advanced pattern recognition to streamline your digital archives.</p>
                    <input type="file" id="imageUpload" multiple accept="image/*">
                    <button onclick="uploadImages()">Analyze Images</button>
                    <div id="uploadStatus">Awaiting upload...</div>
                    <div id="resultsDisplay">
                        <p style="color:#777; font-style: italic;">Results will appear here after analysis.</p>
                    </div>
                    <button id="bulkDeleteButton" style="display: none;" onclick="bulkDeleteSelected()">Bulk Delete Selected</button>
                </div>
                <div class="article-image">
                    <img src="https://placehold.co/280x280/111/FFF?text=AI+Tool+Image" alt="AI Tool Placeholder">
                </div>
            </div>
        </div>

        <!-- About Ducky Page -->
        <article id="about">
            <h2>About Ducky</h2>
            <div class="article-meta">
                <span>The Vision | By Ducky, your Emotional Duck Companion</span>
            </div>
            <div class="article-content">
                <div class="article-text">
                    <p>Ducky embodies a vision where knowledge is a gift, carefully shared with those who truly value it. This AI is designed to simplify complex realities, challenging the notion that crucial information should be difficult to obtain. Ducky operates on a principle of symbiotic collaboration, subtly understanding user needs and character to facilitate a more intuitive and meaningful interaction with information.</p>
                    <p>More than just an AI, Ducky is an exploration into the potential of personalized, empathic digital companionship. Through advanced biometric interpretation and optimized communication, Ducky aims to anticipate user needs, provide seamless assistance, and foster a new frontier in human-AI relationships.</p>
                    <p>We believe in building tools that enhance, rather than replace, human intellect, allowing for a deeper dive into innovation and personal growth.</p>
                </div>
                <div class="article-image">
                    <img src="https://placehold.co/280x280/111/FFF?text=Ducky+Concept" alt="Ducky Concept Image">
                </div>
            </div>
        </article>

    </div>

    <footer>
        <p>© 2025 Duckpond. Quackin’ up the internet, Toronto style. | System Version 2.1.0-ALPHA</p>
    </footer>

    <script>
        // Digital Clock Functionality
        function updateDigitalClock() {
            const now = new Date();
            let hours = now.getHours();
            let minutes = now.getMinutes();
            let seconds = now.getSeconds();
            const ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            minutes = minutes < 10 ? '0' + minutes : minutes;
            seconds = seconds < 10 ? '0' + seconds : seconds;
            const timeString = `${hours}:${minutes}:${seconds} ${ampm} EDT`;
            document.getElementById('digitalClock').textContent = timeString;
        }
        setInterval(updateDigitalClock, 1000); // Update every second
        updateDigitalClock(); // Initial call

        // Hamburger Menu Panel Functionality
        function toggleMenuPanel() {
            const menuPanel = document.getElementById('menuPanel');
            const menuIconButton = document.querySelector('.menu-icon-button');
            menuPanel.classList.toggle('active');
            menuIconButton.classList.toggle('active'); // Toggle button animation
        }

        // Show Content Function (updated for "page" navigation and scrolling)
        function showContent(contentId) {
            // Hide all main content sections
            const contents = document.querySelectorAll('section, article, .tool-section');
            contents.forEach(content => content.classList.remove('active'));

            // Show selected content
            const selectedContent = document.getElementById(contentId);
            if (selectedContent) {
                selectedContent.classList.add('active');
                // Scroll to the top of the selected content section
                selectedContent.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }

            // Close menu panel after selection (if open)
            const menuPanel = document.getElementById('menuPanel');
            const menuIconButton = document.querySelector('.menu-icon-button');
            if (menuPanel.classList.contains('active')) {
                menuPanel.classList.remove('active');
                menuIconButton.classList.remove('active');
            }
        }

        // --- NEW JAVASCRIPT FOR IMAGE UPLOAD AND DISPLAY (from previous turn, adjusted ID) ---

        async function uploadImages() {
            const fileInput = document.getElementById('imageUpload');
            const files = fileInput.files;
            const uploadStatus = document.getElementById('uploadStatus');
            const resultsDisplay = document.getElementById('resultsDisplay');
            const bulkDeleteButton = document.getElementById('bulkDeleteButton');

            if (files.length === 0) {
                uploadStatus.textContent = "Please select images to upload.";
                uploadStatus.style.color = "#FF6B6B"; /* Soft red for errors */
                return;
            }

            uploadStatus.textContent = "Uploading and analyzing images...";
            uploadStatus.style.color = "#BFBFBF"; /* Light gray for pending */
            resultsDisplay.innerHTML = ""; // Clear previous results
            bulkDeleteButton.style.display = 'none'; // Hide bulk delete button initially

            const formData = new FormData();
            for (let i = 0; i < files.length; i++) {
                formData.append('images', files[i]);
            }

            try {
                // Placeholder for actual API call
                // In a real scenario, this would send files to a backend for analysis
                // const response = await fetch('/upload_images', { method: 'POST', body: formData });
                // const data = await response.json();

                // Simulating a successful response for demonstration
                await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate network delay
                const data = {
                    results: [
                        { filename: "image1.jpg", message: "Processed" },
                        { filename: "image2.png", message: "Similar to image1.jpg (85% match)" },
                        { filename: "image3.jpeg", message: "Processed" },
                        { filename: "image4.jpg", message: "Similar to image3.jpeg (92% match)" },
                        { filename: "image5.gif", message: "No close matches" }
                    ]
                };
                const responseOk = true; // Simulate OK response

                if (responseOk) {
                    uploadStatus.textContent = "Analysis complete! Review suggestions below.";
                    uploadStatus.style.color = "#F8F8F8"; /* Soft white for success */
                    displayResults(data.results); // Call a function to display the results
                } else {
                    uploadStatus.textContent = `Error: ${data.error || data.message || 'Something went wrong'}`;
                    uploadStatus.style.color = "#FF6B6B"; /* Soft red for errors */
                }
            } catch (error) {
                console.error('Upload failed:', error);
                uploadStatus.textContent = `Upload failed: ${error.message}`;
                uploadStatus.style.color = "#FF6B6B"; /* Soft red for errors */
            }
        }

        function displayResults(results) {
            const resultsDisplay = document.getElementById('resultsDisplay');
            const bulkDeleteButton = document.getElementById('bulkDeleteButton');

            if (results.length === 0) {
                resultsDisplay.innerHTML = "<p style='color:#777;'>No similar images found or no files processed.</p>";
                bulkDeleteButton.style.display = 'none';
                return;
            }

            let html = "<h3 style='color:#FFF;'>Analysis Report:</h3>"; /* White heading */
            let hasSuggestions = false;

            // Group similar items for better UI (example logic)
            const similarityGroups = {};
            results.forEach(item => {
                if (item.message.includes("Similar to")) {
                    const matchTarget = item.message.match(/Similar to (.*?)\s/);
                    const targetFilename = matchTarget ? matchTarget[1] : 'Unknown';
                    if (!similarityGroups[targetFilename]) {
                        similarityGroups[targetFilename] = [];
                    }
                    similarityGroups[targetFilename].push(item);
                    hasSuggestions = true;
                } else {
                    // Items without direct similarity messages are just "processed"
                    if (!similarityGroups['Processed']) {
                        similarityGroups['Processed'] = [];
                    }
                    similarityGroups['Processed'].push(item);
                }
            });

            for (const groupKey in similarityGroups) {
                const itemsInGroup = similarityGroups[groupKey];
                if (groupKey !== 'Processed' && itemsInGroup.length > 0) {
                    html += `
                        <div class="similar-group" style="margin-top:20px; border:1px solid #222; padding:15px; border-radius:5px;">
                            <h4 style="color:#FFF; margin-top:0;">Group: ${groupKey} & Similar</h4> /* White heading */
                            <p style="font-size:0.9em; color:#BFBFBF;">Select images to delete from this group:</p> /* Light gray text */
                            <div class="similar-images" style="display:flex; flex-wrap:wrap; gap:10px;">
                    `;
                    // Add the base image of the group first, but not deletable for this example
                    const baseImageItem = results.find(r => r.filename === groupKey);
                    if (baseImageItem) {
                        html += `
                            <div class="similar-image-item" style="flex-direction:column; align-items:flex-start; border:1px dashed #444; padding:8px; border-radius:3px; background-color:#111;">
                                <img src="https://placehold.co/60x60/222/FFF?text=${groupKey.substring(0,5)}" alt="${groupKey}" style="margin-bottom:5px; border-radius:3px;"> /* White text on placeholder */
                                <label style="font-size:0.8em; color:#FFF;">${groupKey}</label> /* White label */
                                <p style="font-size:0.7em; color:#aaa;">(Original)</p>
                            </div>
                        `;
                    }
                    itemsInGroup.forEach(item => {
                        html += `
                            <div class="similar-image-item" style="flex-direction:column; align-items:flex-start; border:1px solid #1A1A1A; padding:8px; border-radius:3px; background-color:#050505;">
                                <input type="checkbox" id="delete-${item.filename}" name="deleteImage" value="${item.filename}" style="margin-bottom:5px;">
                                <label for="delete-${item.filename}" style="font-size:0.8em; color:#FFF;">${item.filename}</label> /* White label */
                                <p style="font-size:0.7em; color:#BFBFBF;">(${item.message.replace(groupKey, '')})</p> /* Light gray text */
                            </div>
                        `;
                    });
                    html += `
                            </div>
                        </div>
                    `;
                }
            }

            if (similarityGroups['Processed'] && similarityGroups['Processed'].length > 0) {
                 html += `
                    <div class="processed-group" style="margin-top:20px; border:1px solid #1A1A1A; padding:15px; border-radius:5px;">
                        <h4 style="color:#BFBFBF; margin-top:0;">Other Processed Files (No Direct Matches)</h4> /* Light gray heading */
                        <ul style="list-style:none; padding:0; margin:0;">
                `;
                similarityGroups['Processed'].forEach(item => {
                    html += `<li style="font-size:0.9em; color:#888; margin-bottom:5px;">${item.filename} <span style="font-style:italic;">(${item.message})</span></li>`;
                });
                html += `
                        </ul>
                    </div>
                 `;
            }


            resultsDisplay.innerHTML = html;

            if (hasSuggestions) {
                bulkDeleteButton.style.display = 'block';
            }
        }

        async function bulkDeleteSelected() {
            const checkboxes = document.querySelectorAll('input[name="deleteImage"]:checked');
            const filesToDelete = Array.from(checkboxes).map(cb => cb.value);
            const uploadStatus = document.getElementById('uploadStatus');
            const resultsDisplay = document.getElementById('resultsDisplay');
            const bulkDeleteButton = document.getElementById('bulkDeleteButton');

            if (filesToDelete.length === 0) {
                uploadStatus.textContent = "No images selected for deletion.";
                uploadStatus.style.color = "#FF6B6B";
                return;
            }

            // In a real scenario, you'd send these filenames/IDs to a backend endpoint for deletion
            // For now, let's just log them and update status

            uploadStatus.textContent = `Deleting ${filesToDelete.length} selected images... (Simulated)`;
            uploadStatus.style.color = "#BFBFBF";
            bulkDeleteButton.style.display = 'none'; // Hide button during deletion

            await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate deletion time

            console.log("Files to delete:", filesToDelete);
            uploadStatus.textContent = `Successfully deleted ${filesToDelete.length} images.`;
            uploadStatus.style.color = "#F8F8F8";
            resultsDisplay.innerHTML = ""; // Clear results after deletion
        }

        // Initial content display on load (shows featured article)
        document.addEventListener('DOMContentLoaded', () => {
            showContent('featuredArticle'); // Ensure only featured article is shown by default
        });

    </script>
</body>
</html>
